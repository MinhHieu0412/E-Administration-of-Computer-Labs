@model IEnumerable<E_Administration.Models.Assignments>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<main id="main-dashboard-content" class="p-3">
    <div class="container">
        <div class="dashboard-container">
            <div class="page-title d-flex justify-content-between py-2">
                <nav class="my-auto" aria-label="breadcrumb">
                    <ol class="breadcrumb p-0 my-auto" style="background: none;">
                        <li class="breadcrumb-item"><a href="dashboard.html" class="orange">Home</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Course </li>
                    </ol>
                </nav>
                <button class="btn bg-orange text-white" data-toggle="modal" data-target="#staticBackdrop">
                    <i class="fas fa-file-medical mr-1"></i> Add New
                </button>
            </div>
            <div class="content-section py-3">
                <!-- Table Content Section -->
                <div class="table-responsive">
                    <table class="w-100 table-bordered table">
                        <thead>
                            <tr>
                                <th>
                                   ID
                                </th>
                                <th>
                                    Lecturer
                                </th>
                                <th>
                                    Lab
                                </th>
                                <th>
                                    Date
                                </th>
                                <th>
                                    TimeStart
                                </th>
                                <th>
                                    TimeEnd
                                </th>
                                <th>
                                   Notes
                                </th>
                                <th>Status</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ID)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.User.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Lab.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Date)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TimeStart)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TimeEnd)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Notes)
                                    </td>
                                    <td>
                                        @if (item.Date.Add(item.TimeStart) < DateTime.Now)
                                        {
                                            <span class="badge bg-success">Completed</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">UnCompleted</span>
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-warning btn-sm edit-assignment" data-id="@item.ID">
                                            Edit
                                        </button>
                                        @Html.ActionLink("Delete", "Delete", new { id=item.ID })
                                    </td>
                                    

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- !Table Content Section -->
                <!-- Pagination -->
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li class="page-item"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- !Pagination -->
            </div>
        </div>
    </div>
    <!-- Modal Section -->
    <div class="modal fade " id="staticBackdrop" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Courses</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Form Section -->
                    <section id="form-section" class="py-3">
                        <div class="container">
                            <div class="row">
                                <div class="col-12">
                                    <form id="assignmentForm">
                                        <div class="form-row">
                                            <div class="form-group col-md-6">
                                                <label for="inputUser">User ID </label>
                                                <select class="form-control" id="inputUser" name="UserID">
                                                    <option value="">-- Select User --</option>
                                                    @foreach (var user in ViewBag.Users)
                                                    {
                                                        <option value="@user.ID">@user.UserName</option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="form-group col-md-6">
                                                <label for="inputLab">Lab ID </label>
                                                <select class="form-control" id="inputLab" name="LabID">
                                                    <option value="">-- Select Lab --</option>
                                                    @foreach (var lab in ViewBag.Labs)
                                                    {
                                                        <option value="@lab.ID">@lab.Name</option>
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        <div class="form-row">
                                            <div class="form-group col-md-6">
                                                <label for="inputDate">Date </label>
                                                <input type="date" class="form-control" id="inputDate">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="inputTimeStart">Start Time *</label>
                                                <input type="time" class="form-control" id="inputTimeStart">
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label for="inputTimeEnd">End Time *</label>
                                                <input type="time" class="form-control" id="inputTimeEnd">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="inputNotes">Notes</label>
                                            <textarea class="form-control" id="inputNotes" rows="3"></textarea>
                                        </div>
                                        <div class="text-right">
                                            <button type="submit" class="btn btn-primary">Submit</button>
                                        </div>
                                    </form>

                                </div>
                            </div>
                        </div>
                    </section>
                    <!-- !Form Section -->
                </div>
            </div>
        </div>
    </div>
    <!-- !Modal Section -->

   
    <!-- Modal Edit Section -->
    <!-- Modal for Editing -->
    <div class="modal fade" id="editAssignmentModal" tabindex="-1" role="dialog" aria-labelledby="editAssignmentLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editAssignmentLabel">Edit Assignment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editAssignmentForm">
                        <input type="hidden" id="editAssignmentID" />
                        <input type="hidden" id="editStatus" />
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="editUserID">User *</label>
                                <select class="form-control" id="editUserID">
                                    <!-- Options sẽ được thêm động qua JavaScript -->
                                </select>
                            </div>
                            <div class="form-group col-md-6">
                                <label for="editLabID">Lab *</label>
                                <select class="form-control" id="editLabID">
                                    <!-- Options sẽ được thêm động qua JavaScript -->
                                </select>
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="editDate">Date *</label>
                                <input type="date" class="form-control" id="editDate"  />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="editTimeStart">Start Time *</label>
                                <input type="time" class="form-control" id="editTimeStart"  />
                            </div>
                            <div class="form-group col-md-3">
                                <label for="editTimeEnd">End Time *</label>
                                <input type="time" class="form-control" id="editTimeEnd"  />
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="editNotes">Notes</label>
                            <textarea class="form-control" id="editNotes" rows="3"></textarea>
                        </div>
                        <div class="text-right">
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- !Modal Section -->
</main>
<script>
    $(document).ready(function () {
        $("#assignmentForm").submit(function (e) {
            e.preventDefault();

            // Xóa các thông báo lỗi trước đó
            $(".text-danger").remove();

            let hasError = false;

            // Lấy giá trị từ form
            const formData = {
                UserID: parseInt($("#inputUser").val()),
                LabID: parseInt($("#inputLab").val()),
                Date: $("#inputDate").val(),
                TimeStart: $("#inputTimeStart").val(),
                TimeEnd: $("#inputTimeEnd").val(),
                Notes: $("#inputNotes").val()
            };

            // Kiểm tra từng trường
            if (!formData.UserID || formData.UserID <= 0) {
                $("#inputUser").after('<span class="text-danger error-message">User ID is required and must be a positive number.</span>');
                hasError = true;
            }

            if (!formData.LabID || formData.LabID <= 0) {
                $("#inputLab").after('<span class="text-danger error-message">Lab ID is required and must be a positive number.</span>');
                hasError = true;
            }

            if (!formData.Date) {
                $("#inputDate").after('<span class="text-danger error-message">Date is required.</span>');
                hasError = true;
            }

            if (!formData.TimeStart) {
                $("#inputTimeStart").after('<span class="text-danger error-message">Start Time is required.</span>');
                hasError = true;
            }

            if (!formData.TimeEnd) {
                $("#inputTimeEnd").after('<span class="text-danger error-message">End Time is required.</span>');
                hasError = true;
            }

            if (formData.TimeStart && formData.TimeEnd && formData.TimeStart >= formData.TimeEnd) {
                $("#inputTimeEnd").after('<span class="text-danger">End Time must be later than Start Time.</span>');
                hasError = true;
            }

            // Nếu có lỗi, không gửi form
            if (hasError) {
                return;
            }

            // Gửi form qua AJAX nếu không có lỗi
            $.ajax({
                url: '/Admin/Assignment/CreateAssignment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        Toastify({
                            text: "Assignment created successfully!",
                            duration: 3000,
                            gravity: "top",
                            position: "center",
                            backgroundColor: "green",
                            stopOnFocus: true
                        }).showToast();

                        // Success: Close modal and reload table
                        $('#staticBackdrop').modal('hide');
                        setTimeout(function () {
                           location.reload();
                        }, 3000);
                    } else {
                        alert("An unexpected error occurred.");
                    }
                },
                error: function () {
                    alert("An error occurred while creating the assignment.");
                }
            });
        });
    });

    $(document).ready(function () {
        // Edit button click event
        $('.edit-assignment').on('click', function () {
            var assignmentId = $(this).data('id');

            // Fetch assignment details via AJAX
            $.get('/Admin/Assignment/DetailsAjax/' + assignmentId, function (assignment) {
                console.log(assignment);

                console.log("Raw Date:", assignment.date);  // Ghi lại giá trị ngày thô

                // Loại bỏ phần microseconds nếu có và chuyển đổi thành định dạng mà JavaScript có thể hiểu được
                var rawDate = assignment.date;
                var date = new Date(rawDate.replace(/\.\d+$/, ''));  // Loại bỏ phần microseconds

                if (isNaN(date.getTime())) {
                    console.error("Invalid date value:", assignment.date);
                    alert("Giá trị ngày không hợp lệ nhận được.");
                    return;
                }

                // Chuyển đổi thành định dạng YYYY-MM-DD
                var formattedDate = date.toISOString().split('T')[0];

                // Populate form fields with the fetched assignment data
                $('#editAssignmentID').val(assignment.id);  // Add this for the hidden field
               
                
                $('#editDate').val(formattedDate);
                $('#editTimeStart').val(assignment.timeStart);
                $('#editTimeEnd').val(assignment.timeEnd);
                $('#editNotes').val(assignment.notes);
                $('#editStatus').val(assignment.status);

                // Populate User dropdown
                var userSelect = $('#editUserID');
                userSelect.empty(); // Clear the existing options
                $.each(assignment.users, function (index, user) {
                    var selected = user.id === assignment.userID ? 'selected' : '';
                    userSelect.append(`<option value="${user.id}" ${selected}>${user.userName}</option>`);
                });

                // Populate Lab dropdown
                var labSelect = $('#editLabID');
                labSelect.empty(); // Clear the existing options
                $.each(assignment.labs, function (index, lab) {
                    var selected = lab.id === assignment.labID ? 'selected' : '';
                    labSelect.append(`<option value="${lab.id}" ${selected}>${lab.name}</option>`);
                });
                // Show the modal for editing
                $('#editAssignmentModal').modal('show');
            });
        });

        // Handle form submission for editing
        $("#editAssignmentForm").submit(function (e) {
            e.preventDefault();

            // Clear previous error messages
            $(".text-danger").remove();

            let hasError = false;

            // Gather form data
            const formData = {
                ID: $("#editAssignmentID").val(),  // Include ID of the assignment
                UserID: parseInt($("#editUserID").val()),
                LabID: parseInt($("#editLabID").val()),
                Date: $("#editDate").val(),
                TimeStart: $("#editTimeStart").val(),
                TimeEnd: $("#editTimeEnd").val(),
                Notes: $("#editNotes").val(),
                status: $('#editStatus').val()
            };

            // Validate form data
            if (!formData.UserID || formData.UserID <= 0) {
                $("#editUserID").after('<span class="text-danger error-message">User ID is required and must be a positive number.</span>');
                hasError = true;
            }

            if (!formData.LabID || formData.LabID <= 0) {
                $("#editLabID").after('<span class="text-danger error-message">Lab ID is required and must be a positive number.</span>');
                hasError = true;
            }

            if (!formData.Date) {
                $("#editDate").after('<span class="text-danger error-message">Date is required.</span>');
                hasError = true;
            }

            if (!formData.TimeStart) {
                $("#editTimeStart").after('<span class="text-danger error-message">Start Time is required.</span>');
                hasError = true;
            }

            if (!formData.TimeEnd) {
                $("#editTimeEnd").after('<span class="text-danger error-message">End Time is required.</span>');
                hasError = true;
            }

            if (formData.TimeStart && formData.TimeEnd && formData.TimeStart >= formData.TimeEnd) {
                $("#editTimeEnd").after('<span class="text-danger">End Time must be later than Start Time.</span>');
                hasError = true;
            }

            // If there are validation errors, prevent form submission
            if (hasError) {
                return;
            }

            // Send form data via AJAX if no errors
            $.ajax({
                url: '/Admin/Assignment/EditAssignment',  // Ensure this URL is correct for editing assignment
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();  // Refresh the page after successful edit
                    } else {
                        alert("An unexpected error occurred.");
                    }
                },
                error: function () {
                    alert("An error occurred while editing the assignment.");
                }
            });
        });
    });




</script>

